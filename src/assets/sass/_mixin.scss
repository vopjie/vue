@charset "utf-8";
// @minxin 2016-02-28

// animate.css
// https://daneden.github.io/animate.css/
//
// 引用时请合并类名引用，避免编译出重复的动画样式，如：
// .phone,.bounce {@include bounce(1s,linear,0s,true);}
//
// 不带参数引用将使用默认值
// .bounce {@include bounce();}
//
// // Attention Seekers
// bounce
// flash
// pulse
// rubberBand
// shake
// swing
// tada
// wobble
// jello
// // Bouncing Entrances
// bounceIn
// bounceInDown
// bounceInLeft
// bounceInRight
// bounceInUp
// // Bouncing Exits
// bounceOut
// bounceOutDown
// bounceOutLeft
// bounceOutRight
// bounceOutUp
// // Fading Entrances
// fadeIn
// fadeInDown
// fadeInDownBig
// fadeInLeft
// fadeInLeftBig
// fadeInRight
// fadeInRightBig
// fadeInUp
// fadeInUpBig
// // Fading Exits
// fadeOut
// fadeOutDown
// fadeOutDownBig
// fadeOutLeft
// fadeOutLeftBig
// fadeOutRight
// fadeOutRightBig
// fadeOutUp
// fadeOutUpBig
// // Flippers
// flip
// flipInX
// flipInY
// flipOutX
// flipOutY
// // Lightspeed
// lightSpeedIn
// lightSpeedOut
// // Rotating Entrances
// rotateIn
// rotateInDownLeft
// rotateInDownRight
// rotateInUpLeft
// rotateInUpRight
// // Rotating Exits
// rotateOut
// rotateOutDownLeft
// rotateOutDownRight
// rotateOutUpLeft
// rotateOutUpRight
// // Sliding Entrances
// slideInUp
// slideInDown
// slideInLeft
// slideInRight
// // Sliding Exits
// slideOutUp
// slideOutDown
// slideOutLeft
// slideOutRight
// // Zoom Entrances
// zoomIn
// zoomInDown
// zoomInLeft
// zoomInRight
// zoomInUp
// // Zoom Exits
// zoomOut
// zoomOutDown
// zoomOutLeft
// zoomOutRight
// zoomOutUp
// // Specials
// hinge
// rollIn
// rollOut

// 360度旋转
@mixin rotate($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: rotate $duration $timing-function $delay infinite;
        animation: rotate $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: rotate $duration $timing-function $delay;
        animation: rotate $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  rotate{from{-webkit-transform: rotate(0deg)}
      to{-webkit-transform: rotate(360deg)}
    }
    @keyframes rotate{from{transform: rotate(0deg)}
      to{transform: rotate(360deg)}
    }
}
@mixin bounce($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: bounce $duration $timing-function $delay infinite;
        animation: bounce $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: bounce $duration $timing-function $delay;
        animation: bounce $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    -webkit-transform-origin: center bottom;
    transform-origin: center bottom;
    @-webkit-keyframes  bounce {
      from, 20%, 53%, 80%, to {
        -webkit-animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
        animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
        -webkit-transform: translate3d(0,0,0);
        transform: translate3d(0,0,0);
      }

      40%, 43% {
        -webkit-animation-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
        animation-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
        -webkit-transform: translate3d(0, -30px, 0);
        transform: translate3d(0, -30px, 0);
      }

      70% {
        -webkit-animation-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
        animation-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
        -webkit-transform: translate3d(0, -15px, 0);
        transform: translate3d(0, -15px, 0);
      }

      90% {
        -webkit-transform: translate3d(0,-4px,0);
        transform: translate3d(0,-4px,0);
      }
    }

    @keyframes bounce {
      from, 20%, 53%, 80%, to {
        -webkit-animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
        animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
        -webkit-transform: translate3d(0,0,0);
        transform: translate3d(0,0,0);
      }

      40%, 43% {
        -webkit-animation-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
        animation-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
        -webkit-transform: translate3d(0, -30px, 0);
        transform: translate3d(0, -30px, 0);
      }

      70% {
        -webkit-animation-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
        animation-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
        -webkit-transform: translate3d(0, -15px, 0);
        transform: translate3d(0, -15px, 0);
      }

      90% {
        -webkit-transform: translate3d(0,-4px,0);
        transform: translate3d(0,-4px,0);
      }
    }
}
@mixin flash($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: flash $duration $timing-function $delay infinite;
        animation: flash $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: flash $duration $timing-function $delay;
        animation: flash $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  flash {
      from, 50%, to {
        opacity: 1;
      }

      25%, 75% {
        opacity: 0;
      }
    }

    @keyframes flash {
      from, 50%, to {
        opacity: 1;
      }

      25%, 75% {
        opacity: 0;
      }
    }
}
@mixin pulse($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: pulse $duration $timing-function $delay infinite;
        animation: pulse $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: pulse $duration $timing-function $delay;
        animation: pulse $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  pulse {
      from {
        -webkit-transform: scale3d(1, 1, 1);
        transform: scale3d(1, 1, 1);
      }

      50% {
        -webkit-transform: scale3d(1.05, 1.05, 1.05);
        transform: scale3d(1.05, 1.05, 1.05);
      }

      to {
        -webkit-transform: scale3d(1, 1, 1);
        transform: scale3d(1, 1, 1);
      }
    }

    @keyframes pulse {
      from {
        -webkit-transform: scale3d(1, 1, 1);
        transform: scale3d(1, 1, 1);
      }

      50% {
        -webkit-transform: scale3d(1.05, 1.05, 1.05);
        transform: scale3d(1.05, 1.05, 1.05);
      }

      to {
        -webkit-transform: scale3d(1, 1, 1);
        transform: scale3d(1, 1, 1);
      }
    }
}
@mixin rubberBand($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: rubberBand $duration $timing-function $delay infinite;
        animation: rubberBand $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: rubberBand $duration $timing-function $delay;
        animation: rubberBand $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  rubberBand {
      from {
        -webkit-transform: scale3d(1, 1, 1);
        transform: scale3d(1, 1, 1);
      }

      30% {
        -webkit-transform: scale3d(1.25, 0.75, 1);
        transform: scale3d(1.25, 0.75, 1);
      }

      40% {
        -webkit-transform: scale3d(0.75, 1.25, 1);
        transform: scale3d(0.75, 1.25, 1);
      }

      50% {
        -webkit-transform: scale3d(1.15, 0.85, 1);
        transform: scale3d(1.15, 0.85, 1);
      }

      65% {
        -webkit-transform: scale3d(.95, 1.05, 1);
        transform: scale3d(.95, 1.05, 1);
      }

      75% {
        -webkit-transform: scale3d(1.05, .95, 1);
        transform: scale3d(1.05, .95, 1);
      }

      to {
        -webkit-transform: scale3d(1, 1, 1);
        transform: scale3d(1, 1, 1);
      }
    }

    @keyframes rubberBand {
      from {
        -webkit-transform: scale3d(1, 1, 1);
        transform: scale3d(1, 1, 1);
      }

      30% {
        -webkit-transform: scale3d(1.25, 0.75, 1);
        transform: scale3d(1.25, 0.75, 1);
      }

      40% {
        -webkit-transform: scale3d(0.75, 1.25, 1);
        transform: scale3d(0.75, 1.25, 1);
      }

      50% {
        -webkit-transform: scale3d(1.15, 0.85, 1);
        transform: scale3d(1.15, 0.85, 1);
      }

      65% {
        -webkit-transform: scale3d(.95, 1.05, 1);
        transform: scale3d(.95, 1.05, 1);
      }

      75% {
        -webkit-transform: scale3d(1.05, .95, 1);
        transform: scale3d(1.05, .95, 1);
      }

      to {
        -webkit-transform: scale3d(1, 1, 1);
        transform: scale3d(1, 1, 1);
      }
    }
}
@mixin shake($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: shake $duration $timing-function $delay infinite;
        animation: shake $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: shake $duration $timing-function $delay;
        animation: shake $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  shake {
      from, to {
        -webkit-transform: translate3d(0, 0, 0);
        transform: translate3d(0, 0, 0);
      }

      10%, 30%, 50%, 70%, 90% {
        -webkit-transform: translate3d(-10px, 0, 0);
        transform: translate3d(-10px, 0, 0);
      }

      20%, 40%, 60%, 80% {
        -webkit-transform: translate3d(10px, 0, 0);
        transform: translate3d(10px, 0, 0);
      }
    }

    @keyframes shake {
      from, to {
        -webkit-transform: translate3d(0, 0, 0);
        transform: translate3d(0, 0, 0);
      }

      10%, 30%, 50%, 70%, 90% {
        -webkit-transform: translate3d(-10px, 0, 0);
        transform: translate3d(-10px, 0, 0);
      }

      20%, 40%, 60%, 80% {
        -webkit-transform: translate3d(10px, 0, 0);
        transform: translate3d(10px, 0, 0);
      }
    }
}
@mixin headShake($duration:1s,$timing-function:ease-in-out,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: headShake $duration $timing-function $delay infinite;
        animation: headShake $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: headShake $duration $timing-function $delay;
        animation: headShake $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes   headShake {
      0% {
        -webkit-transform: translateX(0);
        transform: translateX(0);
      }

      6.5% {
        -webkit-transform: translateX(-6px) rotateY(-9deg);
        transform: translateX(-6px) rotateY(-9deg);
      }

      18.5% {
        -webkit-transform: translateX(5px) rotateY(7deg);
        transform: translateX(5px) rotateY(7deg);
      }

      31.5% {
        -webkit-transform: translateX(-3px) rotateY(-5deg);
        transform: translateX(-3px) rotateY(-5deg);
      }

      43.5% {
        -webkit-transform: translateX(2px) rotateY(3deg);
        transform: translateX(2px) rotateY(3deg);
      }

      50% {
        -webkit-transform: translateX(0);
        transform: translateX(0);
      }
    }

    @keyframes headShake {
      0% {
        -webkit-transform: translateX(0);
        transform: translateX(0);
      }

      6.5% {
        -webkit-transform: translateX(-6px) rotateY(-9deg);
        transform: translateX(-6px) rotateY(-9deg);
      }

      18.5% {
        -webkit-transform: translateX(5px) rotateY(7deg);
        transform: translateX(5px) rotateY(7deg);
      }

      31.5% {
        -webkit-transform: translateX(-3px) rotateY(-5deg);
        transform: translateX(-3px) rotateY(-5deg);
      }

      43.5% {
        -webkit-transform: translateX(2px) rotateY(3deg);
        transform: translateX(2px) rotateY(3deg);
      }

      50% {
        -webkit-transform: translateX(0);
        transform: translateX(0);
      }
    }
}
@mixin swing($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: swing $duration $timing-function $delay infinite;
        animation: swing $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: swing $duration $timing-function $delay;
        animation: swing $duration $timing-function $delay;
    }
    -webkit-transform-origin: top center;
    transform-origin: top center;
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  swing {
      20% {
        -webkit-transform: rotate3d(0, 0, 1, 15deg);
        transform: rotate3d(0, 0, 1, 15deg);
      }

      40% {
        -webkit-transform: rotate3d(0, 0, 1, -10deg);
        transform: rotate3d(0, 0, 1, -10deg);
      }

      60% {
        -webkit-transform: rotate3d(0, 0, 1, 5deg);
        transform: rotate3d(0, 0, 1, 5deg);
      }

      80% {
        -webkit-transform: rotate3d(0, 0, 1, -5deg);
        transform: rotate3d(0, 0, 1, -5deg);
      }

      to {
        -webkit-transform: rotate3d(0, 0, 1, 0deg);
        transform: rotate3d(0, 0, 1, 0deg);
      }
    }

    @keyframes swing {
      20% {
        -webkit-transform: rotate3d(0, 0, 1, 15deg);
        transform: rotate3d(0, 0, 1, 15deg);
      }

      40% {
        -webkit-transform: rotate3d(0, 0, 1, -10deg);
        transform: rotate3d(0, 0, 1, -10deg);
      }

      60% {
        -webkit-transform: rotate3d(0, 0, 1, 5deg);
        transform: rotate3d(0, 0, 1, 5deg);
      }

      80% {
        -webkit-transform: rotate3d(0, 0, 1, -5deg);
        transform: rotate3d(0, 0, 1, -5deg);
      }

      to {
        -webkit-transform: rotate3d(0, 0, 1, 0deg);
        transform: rotate3d(0, 0, 1, 0deg);
      }
    }
}
@mixin tada($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: tada $duration $timing-function $delay infinite;
        animation: tada $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: tada $duration $timing-function $delay;
        animation: tada $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  tada {
      from {
        -webkit-transform: scale3d(1, 1, 1);
        transform: scale3d(1, 1, 1);
      }

      10%, 20% {
        -webkit-transform: scale3d(.9, .9, .9) rotate3d(0, 0, 1, -3deg);
        transform: scale3d(.9, .9, .9) rotate3d(0, 0, 1, -3deg);
      }

      30%, 50%, 70%, 90% {
        -webkit-transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);
        transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);
      }

      40%, 60%, 80% {
        -webkit-transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);
        transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);
      }

      to {
        -webkit-transform: scale3d(1, 1, 1);
        transform: scale3d(1, 1, 1);
      }
    }

    @keyframes tada {
      from {
        -webkit-transform: scale3d(1, 1, 1);
        transform: scale3d(1, 1, 1);
      }

      10%, 20% {
        -webkit-transform: scale3d(.9, .9, .9) rotate3d(0, 0, 1, -3deg);
        transform: scale3d(.9, .9, .9) rotate3d(0, 0, 1, -3deg);
      }

      30%, 50%, 70%, 90% {
        -webkit-transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);
        transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);
      }

      40%, 60%, 80% {
        -webkit-transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);
        transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);
      }

      to {
        -webkit-transform: scale3d(1, 1, 1);
        transform: scale3d(1, 1, 1);
      }
    }
}
@mixin wobble($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: wobble $duration $timing-function $delay infinite;
        animation: wobble $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: wobble $duration $timing-function $delay;
        animation: wobble $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  wobble {
      from {
        -webkit-transform: none;
        transform: none;
      }

      15% {
        -webkit-transform: translate3d(-25%, 0, 0) rotate3d(0, 0, 1, -5deg);
        transform: translate3d(-25%, 0, 0) rotate3d(0, 0, 1, -5deg);
      }

      30% {
        -webkit-transform: translate3d(20%, 0, 0) rotate3d(0, 0, 1, 3deg);
        transform: translate3d(20%, 0, 0) rotate3d(0, 0, 1, 3deg);
      }

      45% {
        -webkit-transform: translate3d(-15%, 0, 0) rotate3d(0, 0, 1, -3deg);
        transform: translate3d(-15%, 0, 0) rotate3d(0, 0, 1, -3deg);
      }

      60% {
        -webkit-transform: translate3d(10%, 0, 0) rotate3d(0, 0, 1, 2deg);
        transform: translate3d(10%, 0, 0) rotate3d(0, 0, 1, 2deg);
      }

      75% {
        -webkit-transform: translate3d(-5%, 0, 0) rotate3d(0, 0, 1, -1deg);
        transform: translate3d(-5%, 0, 0) rotate3d(0, 0, 1, -1deg);
      }

      to {
        -webkit-transform: none;
        transform: none;
      }
    }

    @keyframes wobble {
      from {
        -webkit-transform: none;
        transform: none;
      }

      15% {
        -webkit-transform: translate3d(-25%, 0, 0) rotate3d(0, 0, 1, -5deg);
        transform: translate3d(-25%, 0, 0) rotate3d(0, 0, 1, -5deg);
      }

      30% {
        -webkit-transform: translate3d(20%, 0, 0) rotate3d(0, 0, 1, 3deg);
        transform: translate3d(20%, 0, 0) rotate3d(0, 0, 1, 3deg);
      }

      45% {
        -webkit-transform: translate3d(-15%, 0, 0) rotate3d(0, 0, 1, -3deg);
        transform: translate3d(-15%, 0, 0) rotate3d(0, 0, 1, -3deg);
      }

      60% {
        -webkit-transform: translate3d(10%, 0, 0) rotate3d(0, 0, 1, 2deg);
        transform: translate3d(10%, 0, 0) rotate3d(0, 0, 1, 2deg);
      }

      75% {
        -webkit-transform: translate3d(-5%, 0, 0) rotate3d(0, 0, 1, -1deg);
        transform: translate3d(-5%, 0, 0) rotate3d(0, 0, 1, -1deg);
      }

      to {
        -webkit-transform: none;
        transform: none;
      }
    }
}
@mixin jello($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: jello $duration $timing-function $delay infinite;
        animation: jello $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: jello $duration $timing-function $delay;
        animation: jello $duration $timing-function $delay;
    }
    -webkit-transform-origin: center;
    transform-origin: center;
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  jello {
      from, 11.1%, to {
        -webkit-transform: none;
        transform: none;
      }

      22.2% {
        -webkit-transform: skewX(-12.5deg) skewY(-12.5deg);
        transform: skewX(-12.5deg) skewY(-12.5deg);
      }

      33.3% {
        -webkit-transform: skewX(6.25deg) skewY(6.25deg);
        transform: skewX(6.25deg) skewY(6.25deg);
      }

      44.4% {
        -webkit-transform: skewX(-3.125deg) skewY(-3.125deg);
        transform: skewX(-3.125deg) skewY(-3.125deg);
      }

      55.5% {
        -webkit-transform: skewX(1.5625deg) skewY(1.5625deg);
        transform: skewX(1.5625deg) skewY(1.5625deg);
      }

      66.6% {
        -webkit-transform: skewX(-0.78125deg) skewY(-0.78125deg);
        transform: skewX(-0.78125deg) skewY(-0.78125deg);
      }

      77.7% {
        -webkit-transform: skewX(0.390625deg) skewY(0.390625deg);
        transform: skewX(0.390625deg) skewY(0.390625deg);
      }

      88.8% {
        -webkit-transform: skewX(-0.1953125deg) skewY(-0.1953125deg);
        transform: skewX(-0.1953125deg) skewY(-0.1953125deg);
      }
    }

    @keyframes jello {
      from, 11.1%, to {
        -webkit-transform: none;
        transform: none;
      }

      22.2% {
        -webkit-transform: skewX(-12.5deg) skewY(-12.5deg);
        transform: skewX(-12.5deg) skewY(-12.5deg);
      }

      33.3% {
        -webkit-transform: skewX(6.25deg) skewY(6.25deg);
        transform: skewX(6.25deg) skewY(6.25deg);
      }

      44.4% {
        -webkit-transform: skewX(-3.125deg) skewY(-3.125deg);
        transform: skewX(-3.125deg) skewY(-3.125deg);
      }

      55.5% {
        -webkit-transform: skewX(1.5625deg) skewY(1.5625deg);
        transform: skewX(1.5625deg) skewY(1.5625deg);
      }

      66.6% {
        -webkit-transform: skewX(-0.78125deg) skewY(-0.78125deg);
        transform: skewX(-0.78125deg) skewY(-0.78125deg);
      }

      77.7% {
        -webkit-transform: skewX(0.390625deg) skewY(0.390625deg);
        transform: skewX(0.390625deg) skewY(0.390625deg);
      }

      88.8% {
        -webkit-transform: skewX(-0.1953125deg) skewY(-0.1953125deg);
        transform: skewX(-0.1953125deg) skewY(-0.1953125deg);
      }
    }
}
@mixin bounceIn($duration:.75s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: bounceIn $duration $timing-function $delay infinite;
        animation: bounceIn $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: bounceIn $duration $timing-function $delay;
        animation: bounceIn $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  bounceIn {
      from, 20%, 40%, 60%, 80%, to {
        -webkit-animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
        animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
      }

      0% {
        opacity: 0;
        -webkit-transform: scale3d(.3, .3, .3);
        transform: scale3d(.3, .3, .3);
      }

      20% {
        -webkit-transform: scale3d(1.1, 1.1, 1.1);
        transform: scale3d(1.1, 1.1, 1.1);
      }

      40% {
        -webkit-transform: scale3d(.9, .9, .9);
        transform: scale3d(.9, .9, .9);
      }

      60% {
        opacity: 1;
        -webkit-transform: scale3d(1.03, 1.03, 1.03);
        transform: scale3d(1.03, 1.03, 1.03);
      }

      80% {
        -webkit-transform: scale3d(.97, .97, .97);
        transform: scale3d(.97, .97, .97);
      }

      to {
        opacity: 1;
        -webkit-transform: scale3d(1, 1, 1);
        transform: scale3d(1, 1, 1);
      }
    }

    @keyframes bounceIn {
      from, 20%, 40%, 60%, 80%, to {
        -webkit-animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
        animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
      }

      0% {
        opacity: 0;
        -webkit-transform: scale3d(.3, .3, .3);
        transform: scale3d(.3, .3, .3);
      }

      20% {
        -webkit-transform: scale3d(1.1, 1.1, 1.1);
        transform: scale3d(1.1, 1.1, 1.1);
      }

      40% {
        -webkit-transform: scale3d(.9, .9, .9);
        transform: scale3d(.9, .9, .9);
      }

      60% {
        opacity: 1;
        -webkit-transform: scale3d(1.03, 1.03, 1.03);
        transform: scale3d(1.03, 1.03, 1.03);
      }

      80% {
        -webkit-transform: scale3d(.97, .97, .97);
        transform: scale3d(.97, .97, .97);
      }

      to {
        opacity: 1;
        -webkit-transform: scale3d(1, 1, 1);
        transform: scale3d(1, 1, 1);
      }
    }
}
@mixin bounceInDown($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: bounceInDown $duration $timing-function $delay infinite;
        animation: bounceInDown $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: bounceInDown $duration $timing-function $delay;
        animation: bounceInDown $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  bounceInDown {
      from, 60%, 75%, 90%, to {
        -webkit-animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
        animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
      }

      0% {
        opacity: 0;
        -webkit-transform: translate3d(0, -3000px, 0);
        transform: translate3d(0, -3000px, 0);
      }

      60% {
        opacity: 1;
        -webkit-transform: translate3d(0, 25px, 0);
        transform: translate3d(0, 25px, 0);
      }

      75% {
        -webkit-transform: translate3d(0, -10px, 0);
        transform: translate3d(0, -10px, 0);
      }

      90% {
        -webkit-transform: translate3d(0, 5px, 0);
        transform: translate3d(0, 5px, 0);
      }

      to {
        -webkit-transform: none;
        transform: none;
      }
    }

    @keyframes bounceInDown {
      from, 60%, 75%, 90%, to {
        -webkit-animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
        animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
      }

      0% {
        opacity: 0;
        -webkit-transform: translate3d(0, -3000px, 0);
        transform: translate3d(0, -3000px, 0);
      }

      60% {
        opacity: 1;
        -webkit-transform: translate3d(0, 25px, 0);
        transform: translate3d(0, 25px, 0);
      }

      75% {
        -webkit-transform: translate3d(0, -10px, 0);
        transform: translate3d(0, -10px, 0);
      }

      90% {
        -webkit-transform: translate3d(0, 5px, 0);
        transform: translate3d(0, 5px, 0);
      }

      to {
        -webkit-transform: none;
        transform: none;
      }
    }
}
@mixin bounceInLeft($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: bounceInLeft $duration $timing-function $delay infinite;
        animation: bounceInLeft $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: bounceInLeft $duration $timing-function $delay;
        animation: bounceInLeft $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  bounceInLeft {
      from, 60%, 75%, 90%, to {
        -webkit-animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
        animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
      }

      0% {
        opacity: 0;
        -webkit-transform: translate3d(-3000px, 0, 0);
        transform: translate3d(-3000px, 0, 0);
      }

      60% {
        opacity: 1;
        -webkit-transform: translate3d(25px, 0, 0);
        transform: translate3d(25px, 0, 0);
      }

      75% {
        -webkit-transform: translate3d(-10px, 0, 0);
        transform: translate3d(-10px, 0, 0);
      }

      90% {
        -webkit-transform: translate3d(5px, 0, 0);
        transform: translate3d(5px, 0, 0);
      }

      to {
        -webkit-transform: none;
        transform: none;
      }
    }

    @keyframes bounceInLeft {
      from, 60%, 75%, 90%, to {
        -webkit-animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
        animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
      }

      0% {
        opacity: 0;
        -webkit-transform: translate3d(-3000px, 0, 0);
        transform: translate3d(-3000px, 0, 0);
      }

      60% {
        opacity: 1;
        -webkit-transform: translate3d(25px, 0, 0);
        transform: translate3d(25px, 0, 0);
      }

      75% {
        -webkit-transform: translate3d(-10px, 0, 0);
        transform: translate3d(-10px, 0, 0);
      }

      90% {
        -webkit-transform: translate3d(5px, 0, 0);
        transform: translate3d(5px, 0, 0);
      }

      to {
        -webkit-transform: none;
        transform: none;
      }
    }
}
@mixin bounceInRight($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: bounceInRight $duration $timing-function $delay infinite;
        animation: bounceInRight $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: bounceInRight $duration $timing-function $delay;
        animation: bounceInRight $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  bounceInRight {
        from, 60%, 75%, 90%, to {
        -webkit-animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
        animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
        }

        from {
        opacity: 0;
        -webkit-transform: translate3d(3000px, 0, 0);
        transform: translate3d(3000px, 0, 0);
        }

        60% {
        opacity: 1;
        -webkit-transform: translate3d(-25px, 0, 0);
        transform: translate3d(-25px, 0, 0);
        }

        75% {
        -webkit-transform: translate3d(10px, 0, 0);
        transform: translate3d(10px, 0, 0);
        }

        90% {
        -webkit-transform: translate3d(-5px, 0, 0);
        transform: translate3d(-5px, 0, 0);
        }

        to {
        -webkit-transform: none;
        transform: none;
        }
        }

        @keyframes bounceInRight {
        from, 60%, 75%, 90%, to {
        -webkit-animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
        animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
        }

        from {
        opacity: 0;
        -webkit-transform: translate3d(3000px, 0, 0);
        transform: translate3d(3000px, 0, 0);
        }

        60% {
        opacity: 1;
        -webkit-transform: translate3d(-25px, 0, 0);
        transform: translate3d(-25px, 0, 0);
        }

        75% {
        -webkit-transform: translate3d(10px, 0, 0);
        transform: translate3d(10px, 0, 0);
        }

        90% {
        -webkit-transform: translate3d(-5px, 0, 0);
        transform: translate3d(-5px, 0, 0);
        }

        to {
        -webkit-transform: none;
        transform: none;
        }
        }
}
@mixin bounceInUp($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: bounceInUp $duration $timing-function $delay infinite;
        animation: bounceInUp $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: bounceInUp $duration $timing-function $delay;
        animation: bounceInUp $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  bounceInUp {
      from, 60%, 75%, 90%, to {
        -webkit-animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
        animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
      }

      from {
        opacity: 0;
        -webkit-transform: translate3d(0, 3000px, 0);
        transform: translate3d(0, 3000px, 0);
      }

      60% {
        opacity: 1;
        -webkit-transform: translate3d(0, -20px, 0);
        transform: translate3d(0, -20px, 0);
      }

      75% {
        -webkit-transform: translate3d(0, 10px, 0);
        transform: translate3d(0, 10px, 0);
      }

      90% {
        -webkit-transform: translate3d(0, -5px, 0);
        transform: translate3d(0, -5px, 0);
      }

      to {
        -webkit-transform: translate3d(0, 0, 0);
        transform: translate3d(0, 0, 0);
      }
    }

    @keyframes bounceInUp {
      from, 60%, 75%, 90%, to {
        -webkit-animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
        animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
      }

      from {
        opacity: 0;
        -webkit-transform: translate3d(0, 3000px, 0);
        transform: translate3d(0, 3000px, 0);
      }

      60% {
        opacity: 1;
        -webkit-transform: translate3d(0, -20px, 0);
        transform: translate3d(0, -20px, 0);
      }

      75% {
        -webkit-transform: translate3d(0, 10px, 0);
        transform: translate3d(0, 10px, 0);
      }

      90% {
        -webkit-transform: translate3d(0, -5px, 0);
        transform: translate3d(0, -5px, 0);
      }

      to {
        -webkit-transform: translate3d(0, 0, 0);
        transform: translate3d(0, 0, 0);
      }
    }
}
@mixin bounceOut($duration:.75s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: bounceOut $duration $timing-function $delay infinite;
        animation: bounceOut $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: bounceOut $duration $timing-function $delay;
        animation: bounceOut $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  bounceOut {
      20% {
        -webkit-transform: scale3d(.9, .9, .9);
        transform: scale3d(.9, .9, .9);
      }

      50%, 55% {
        opacity: 1;
        -webkit-transform: scale3d(1.1, 1.1, 1.1);
        transform: scale3d(1.1, 1.1, 1.1);
      }

      to {
        opacity: 0;
        -webkit-transform: scale3d(.3, .3, .3);
        transform: scale3d(.3, .3, .3);
      }
    }

    @keyframes bounceOut {
      20% {
        -webkit-transform: scale3d(.9, .9, .9);
        transform: scale3d(.9, .9, .9);
      }

      50%, 55% {
        opacity: 1;
        -webkit-transform: scale3d(1.1, 1.1, 1.1);
        transform: scale3d(1.1, 1.1, 1.1);
      }

      to {
        opacity: 0;
        -webkit-transform: scale3d(.3, .3, .3);
        transform: scale3d(.3, .3, .3);
      }
    }
}
@mixin bounceOutDown($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: bounceOutDown $duration $timing-function $delay infinite;
        animation: bounceOutDown $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: bounceOutDown $duration $timing-function $delay;
        animation: bounceOutDown $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  bounceOutDown {
      20% {
        -webkit-transform: translate3d(0, 10px, 0);
        transform: translate3d(0, 10px, 0);
      }

      40%, 45% {
        opacity: 1;
        -webkit-transform: translate3d(0, -20px, 0);
        transform: translate3d(0, -20px, 0);
      }

      to {
        opacity: 0;
        -webkit-transform: translate3d(0, 2000px, 0);
        transform: translate3d(0, 2000px, 0);
      }
    }

    @keyframes bounceOutDown {
      20% {
        -webkit-transform: translate3d(0, 10px, 0);
        transform: translate3d(0, 10px, 0);
      }

      40%, 45% {
        opacity: 1;
        -webkit-transform: translate3d(0, -20px, 0);
        transform: translate3d(0, -20px, 0);
      }

      to {
        opacity: 0;
        -webkit-transform: translate3d(0, 2000px, 0);
        transform: translate3d(0, 2000px, 0);
      }
    }
}
@mixin bounceOutLeft($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: bounceOutLeft $duration $timing-function $delay infinite;
        animation: bounceOutLeft $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: bounceOutLeft $duration $timing-function $delay;
        animation: bounceOutLeft $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  bounceOutLeft {
      20% {
        opacity: 1;
        -webkit-transform: translate3d(20px, 0, 0);
        transform: translate3d(20px, 0, 0);
      }

      to {
        opacity: 0;
        -webkit-transform: translate3d(-2000px, 0, 0);
        transform: translate3d(-2000px, 0, 0);
      }
    }

    @keyframes bounceOutLeft {
      20% {
        opacity: 1;
        -webkit-transform: translate3d(20px, 0, 0);
        transform: translate3d(20px, 0, 0);
      }

      to {
        opacity: 0;
        -webkit-transform: translate3d(-2000px, 0, 0);
        transform: translate3d(-2000px, 0, 0);
      }
    }
}
@mixin bounceOutRight($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: bounceOutRight $duration $timing-function $delay infinite;
        animation: bounceOutRight $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: bounceOutRight $duration $timing-function $delay;
        animation: bounceOutRight $duration $timing-function $delay;
    }

    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  bounceOutRight {
      20% {
        opacity: 1;
        -webkit-transform: translate3d(-20px, 0, 0);
        transform: translate3d(-20px, 0, 0);
      }

      to {
        opacity: 0;
        -webkit-transform: translate3d(2000px, 0, 0);
        transform: translate3d(2000px, 0, 0);
      }
    }

    @keyframes bounceOutRight {
      20% {
        opacity: 1;
        -webkit-transform: translate3d(-20px, 0, 0);
        transform: translate3d(-20px, 0, 0);
      }

      to {
        opacity: 0;
        -webkit-transform: translate3d(2000px, 0, 0);
        transform: translate3d(2000px, 0, 0);
      }
    }
}
@mixin bounceOutUp($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: bounceOutUp $duration $timing-function $delay infinite;
        animation: bounceOutUp $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: bounceOutUp $duration $timing-function $delay;
        animation: bounceOutUp $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  bounceOutUp {
      20% {
        -webkit-transform: translate3d(0, -10px, 0);
        transform: translate3d(0, -10px, 0);
      }

      40%, 45% {
        opacity: 1;
        -webkit-transform: translate3d(0, 20px, 0);
        transform: translate3d(0, 20px, 0);
      }

      to {
        opacity: 0;
        -webkit-transform: translate3d(0, -2000px, 0);
        transform: translate3d(0, -2000px, 0);
      }
    }

    @keyframes bounceOutUp {
      20% {
        -webkit-transform: translate3d(0, -10px, 0);
        transform: translate3d(0, -10px, 0);
      }

      40%, 45% {
        opacity: 1;
        -webkit-transform: translate3d(0, 20px, 0);
        transform: translate3d(0, 20px, 0);
      }

      to {
        opacity: 0;
        -webkit-transform: translate3d(0, -2000px, 0);
        transform: translate3d(0, -2000px, 0);
      }
    }
}
@mixin fadeIn($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: fadeIn $duration $timing-function $delay infinite;
        animation: fadeIn $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: fadeIn $duration $timing-function $delay;
        animation: fadeIn $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  fadeIn {
      from {
        opacity: 0;
      }

      to {
        opacity: 1;
      }
    }

    @keyframes fadeIn {
      from {
        opacity: 0;
      }

      to {
        opacity: 1;
      }
    }
}
@mixin fadeInDown($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: fadeInDown $duration $timing-function $delay infinite;
        animation: fadeInDown $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: fadeInDown $duration $timing-function $delay;
        animation: fadeInDown $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  fadeInDown {
      from {
        opacity: 0;
        -webkit-transform: translate3d(0, -100%, 0);
        transform: translate3d(0, -100%, 0);
      }

      to {
        opacity: 1;
        -webkit-transform: none;
        transform: none;
      }
    }

    @keyframes fadeInDown {
      from {
        opacity: 0;
        -webkit-transform: translate3d(0, -100%, 0);
        transform: translate3d(0, -100%, 0);
      }

      to {
        opacity: 1;
        -webkit-transform: none;
        transform: none;
      }
    }
}
@mixin fadeInDownBig($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: fadeInDownBig $duration $timing-function $delay infinite;
        animation: fadeInDownBig $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: fadeInDownBig $duration $timing-function $delay;
        animation: fadeInDownBig $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  fadeInDownBig {
      from {
        opacity: 0;
        -webkit-transform: translate3d(0, -2000px, 0);
        transform: translate3d(0, -2000px, 0);
      }

      to {
        opacity: 1;
        -webkit-transform: none;
        transform: none;
      }
    }

    @keyframes fadeInDownBig {
      from {
        opacity: 0;
        -webkit-transform: translate3d(0, -2000px, 0);
        transform: translate3d(0, -2000px, 0);
      }

      to {
        opacity: 1;
        -webkit-transform: none;
        transform: none;
      }
    }
}
@mixin fadeInLeft($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: fadeInLeft $duration $timing-function $delay infinite;
        animation: fadeInLeft $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: fadeInLeft $duration $timing-function $delay;
        animation: fadeInLeft $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  fadeInLeft {
      from {
        opacity: 0;
        -webkit-transform: translate3d(-100%, 0, 0);
        transform: translate3d(-100%, 0, 0);
      }

      to {
        opacity: 1;
        -webkit-transform: none;
        transform: none;
      }
    }

    @keyframes fadeInLeft {
      from {
        opacity: 0;
        -webkit-transform: translate3d(-100%, 0, 0);
        transform: translate3d(-100%, 0, 0);
      }

      to {
        opacity: 1;
        -webkit-transform: none;
        transform: none;
      }
    }
}
@mixin fadeInLeftBig($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: fadeInLeftBig $duration $timing-function $delay infinite;
        animation: fadeInLeftBig $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: fadeInLeftBig $duration $timing-function $delay;
        animation: fadeInLeftBig $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  fadeInLeftBig {
      from {
        opacity: 0;
        -webkit-transform: translate3d(-2000px, 0, 0);
        transform: translate3d(-2000px, 0, 0);
      }

      to {
        opacity: 1;
        -webkit-transform: none;
        transform: none;
      }
    }

    @keyframes fadeInLeftBig {
      from {
        opacity: 0;
        -webkit-transform: translate3d(-2000px, 0, 0);
        transform: translate3d(-2000px, 0, 0);
      }

      to {
        opacity: 1;
        -webkit-transform: none;
        transform: none;
      }
    }
}
@mixin fadeInRight($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: fadeInRight $duration $timing-function $delay infinite;
        animation: fadeInRight $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: fadeInRight $duration $timing-function $delay;
        animation: fadeInRight $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  fadeInRight {
      from {
        opacity: 0;
        -webkit-transform: translate3d(100%, 0, 0);
        transform: translate3d(100%, 0, 0);
      }

      to {
        opacity: 1;
        -webkit-transform: none;
        transform: none;
      }
    }

    @keyframes fadeInRight {
      from {
        opacity: 0;
        -webkit-transform: translate3d(100%, 0, 0);
        transform: translate3d(100%, 0, 0);
      }

      to {
        opacity: 1;
        -webkit-transform: none;
        transform: none;
      }
    }
}
@mixin fadeInRightBig($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: fadeInRightBig $duration $timing-function $delay infinite;
        animation: fadeInRightBig $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: fadeInRightBig $duration $timing-function $delay;
        animation: fadeInRightBig $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  fadeInRightBig {
      from {
        opacity: 0;
        -webkit-transform: translate3d(2000px, 0, 0);
        transform: translate3d(2000px, 0, 0);
      }

      to {
        opacity: 1;
        -webkit-transform: none;
        transform: none;
      }
    }

    @keyframes fadeInRightBig {
      from {
        opacity: 0;
        -webkit-transform: translate3d(2000px, 0, 0);
        transform: translate3d(2000px, 0, 0);
      }

      to {
        opacity: 1;
        -webkit-transform: none;
        transform: none;
      }
    }
}
@mixin fadeInUp($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: fadeInUp $duration $timing-function $delay infinite;
        animation: fadeInUp $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: fadeInUp $duration $timing-function $delay;
        animation: fadeInUp $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  fadeInUp {
      from {
        opacity: 0;
        -webkit-transform: translate3d(0, 100%, 0);
        transform: translate3d(0, 100%, 0);
      }

      to {
        opacity: 1;
        -webkit-transform: none;
        transform: none;
      }
    }

    @keyframes fadeInUp {
      from {
        opacity: 0;
        -webkit-transform: translate3d(0, 100%, 0);
        transform: translate3d(0, 100%, 0);
      }

      to {
        opacity: 1;
        -webkit-transform: none;
        transform: none;
      }
    }
}
@mixin fadeInUpBig($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: fadeInUpBig $duration $timing-function $delay infinite;
        animation: fadeInUpBig $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: fadeInUpBig $duration $timing-function $delay;
        animation: fadeInUpBig $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  fadeInUpBig {
      from {
        opacity: 0;
        -webkit-transform: translate3d(0, 2000px, 0);
        transform: translate3d(0, 2000px, 0);
      }

      to {
        opacity: 1;
        -webkit-transform: none;
        transform: none;
      }
    }

    @keyframes fadeInUpBig {
      from {
        opacity: 0;
        -webkit-transform: translate3d(0, 2000px, 0);
        transform: translate3d(0, 2000px, 0);
      }

      to {
        opacity: 1;
        -webkit-transform: none;
        transform: none;
      }
    }
}
@mixin fadeOut($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: fadeOut $duration $timing-function $delay infinite;
        animation: fadeOut $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: fadeOut $duration $timing-function $delay;
        animation: fadeOut $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  fadeOut {
      from {
        opacity: 1;
      }

      to {
        opacity: 0;
      }
    }

    @keyframes fadeOut {
      from {
        opacity: 1;
      }

      to {
        opacity: 0;
      }
    }
}
@mixin fadeOutDown($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: fadeOutDown $duration $timing-function $delay infinite;
        animation: fadeOutDown $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: fadeOutDown $duration $timing-function $delay;
        animation: fadeOutDown $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  fadeOutDown {
      from {
        opacity: 1;
      }

      to {
        opacity: 0;
        -webkit-transform: translate3d(0, 100%, 0);
        transform: translate3d(0, 100%, 0);
      }
    }

    @keyframes fadeOutDown {
      from {
        opacity: 1;
      }

      to {
        opacity: 0;
        -webkit-transform: translate3d(0, 100%, 0);
        transform: translate3d(0, 100%, 0);
      }
    }
}
@mixin fadeOutDownBig($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: fadeOutDownBig $duration $timing-function $delay infinite;
        animation: fadeOutDownBig $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: fadeOutDownBig $duration $timing-function $delay;
        animation: fadeOutDownBig $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  fadeOutDownBig {
      from {
        opacity: 1;
      }

      to {
        opacity: 0;
        -webkit-transform: translate3d(0, 2000px, 0);
        transform: translate3d(0, 2000px, 0);
      }
    }

    @keyframes fadeOutDownBig {
      from {
        opacity: 1;
      }

      to {
        opacity: 0;
        -webkit-transform: translate3d(0, 2000px, 0);
        transform: translate3d(0, 2000px, 0);
      }
    }
}
@mixin fadeOutLeft($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: fadeOutLeft $duration $timing-function $delay infinite;
        animation: fadeOutLeft $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: fadeOutLeft $duration $timing-function $delay;
        animation: fadeOutLeft $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  fadeOutLeft {
      from {
        opacity: 1;
      }

      to {
        opacity: 0;
        -webkit-transform: translate3d(-100%, 0, 0);
        transform: translate3d(-100%, 0, 0);
      }
    }

    @keyframes fadeOutLeft {
      from {
        opacity: 1;
      }

      to {
        opacity: 0;
        -webkit-transform: translate3d(-100%, 0, 0);
        transform: translate3d(-100%, 0, 0);
      }
    }
}
@mixin fadeOutLeftBig($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: fadeOutLeftBig $duration $timing-function $delay infinite;
        animation: fadeOutLeftBig $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: fadeOutLeftBig $duration $timing-function $delay;
        animation: fadeOutLeftBig $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  fadeOutLeftBig {
      from {
        opacity: 1;
      }

      to {
        opacity: 0;
        -webkit-transform: translate3d(-2000px, 0, 0);
        transform: translate3d(-2000px, 0, 0);
      }
    }

    @keyframes fadeOutLeftBig {
      from {
        opacity: 1;
      }

      to {
        opacity: 0;
        -webkit-transform: translate3d(-2000px, 0, 0);
        transform: translate3d(-2000px, 0, 0);
      }
    }
}
@mixin fadeOutRight($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: fadeOutRight $duration $timing-function $delay infinite;
        animation: fadeOutRight $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: fadeOutRight $duration $timing-function $delay;
        animation: fadeOutRight $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  fadeOutRight {
      from {
        opacity: 1;
      }

      to {
        opacity: 0;
        -webkit-transform: translate3d(100%, 0, 0);
        transform: translate3d(100%, 0, 0);
      }
    }

    @keyframes fadeOutRight {
      from {
        opacity: 1;
      }

      to {
        opacity: 0;
        -webkit-transform: translate3d(100%, 0, 0);
        transform: translate3d(100%, 0, 0);
      }
    }
}
@mixin fadeOutRightBig($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: fadeOutRightBig $duration $timing-function $delay infinite;
        animation: fadeOutRightBig $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: fadeOutRightBig $duration $timing-function $delay;
        animation: fadeOutRightBig $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  fadeOutRightBig {
      from {
        opacity: 1;
      }

      to {
        opacity: 0;
        -webkit-transform: translate3d(2000px, 0, 0);
        transform: translate3d(2000px, 0, 0);
      }
    }

    @keyframes fadeOutRightBig {
      from {
        opacity: 1;
      }

      to {
        opacity: 0;
        -webkit-transform: translate3d(2000px, 0, 0);
        transform: translate3d(2000px, 0, 0);
      }
    }
}
@mixin fadeOutUp($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: fadeOutUp $duration $timing-function $delay infinite;
        animation: fadeOutUp $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: fadeOutUp $duration $timing-function $delay;
        animation: fadeOutUp $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  fadeOutUp {
      from {
        opacity: 1;
      }

      to {
        opacity: 0;
        -webkit-transform: translate3d(0, -100%, 0);
        transform: translate3d(0, -100%, 0);
      }
    }

    @keyframes fadeOutUp {
      from {
        opacity: 1;
      }

      to {
        opacity: 0;
        -webkit-transform: translate3d(0, -100%, 0);
        transform: translate3d(0, -100%, 0);
      }
    }
}
@mixin fadeOutUpBig($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: fadeOutUpBig $duration $timing-function $delay infinite;
        animation: fadeOutUpBig $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: fadeOutUpBig $duration $timing-function $delay;
        animation: fadeOutUpBig $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  fadeOutUpBig {
      from {
        opacity: 1;
      }

      to {
        opacity: 0;
        -webkit-transform: translate3d(0, -2000px, 0);
        transform: translate3d(0, -2000px, 0);
      }
    }

    @keyframes fadeOutUpBig {
      from {
        opacity: 1;
      }

      to {
        opacity: 0;
        -webkit-transform: translate3d(0, -2000px, 0);
        transform: translate3d(0, -2000px, 0);
      }
    }
}
@mixin flip($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: flip $duration $timing-function $delay infinite;
        animation: flip $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: flip $duration $timing-function $delay;
        animation: flip $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  flip {
      from {
        -webkit-transform: perspective(400px) rotate3d(0, 1, 0, -360deg);
        transform: perspective(400px) rotate3d(0, 1, 0, -360deg);
        -webkit-animation-timing-function: ease-out;
        animation-timing-function: ease-out;
      }

      40% {
        -webkit-transform: perspective(400px) translate3d(0, 0, 150px) rotate3d(0, 1, 0, -190deg);
        transform: perspective(400px) translate3d(0, 0, 150px) rotate3d(0, 1, 0, -190deg);
        -webkit-animation-timing-function: ease-out;
        animation-timing-function: ease-out;
      }

      50% {
        -webkit-transform: perspective(400px) translate3d(0, 0, 150px) rotate3d(0, 1, 0, -170deg);
        transform: perspective(400px) translate3d(0, 0, 150px) rotate3d(0, 1, 0, -170deg);
        -webkit-animation-timing-function: ease-in;
        animation-timing-function: ease-in;
      }

      80% {
        -webkit-transform: perspective(400px) scale3d(.95, .95, .95);
        transform: perspective(400px) scale3d(.95, .95, .95);
        -webkit-animation-timing-function: ease-in;
        animation-timing-function: ease-in;
      }

      to {
        -webkit-transform: perspective(400px);
        transform: perspective(400px);
        -webkit-animation-timing-function: ease-in;
        animation-timing-function: ease-in;
      }
    }

    @keyframes flip {
      from {
        -webkit-transform: perspective(400px) rotate3d(0, 1, 0, -360deg);
        transform: perspective(400px) rotate3d(0, 1, 0, -360deg);
        -webkit-animation-timing-function: ease-out;
        animation-timing-function: ease-out;
      }

      40% {
        -webkit-transform: perspective(400px) translate3d(0, 0, 150px) rotate3d(0, 1, 0, -190deg);
        transform: perspective(400px) translate3d(0, 0, 150px) rotate3d(0, 1, 0, -190deg);
        -webkit-animation-timing-function: ease-out;
        animation-timing-function: ease-out;
      }

      50% {
        -webkit-transform: perspective(400px) translate3d(0, 0, 150px) rotate3d(0, 1, 0, -170deg);
        transform: perspective(400px) translate3d(0, 0, 150px) rotate3d(0, 1, 0, -170deg);
        -webkit-animation-timing-function: ease-in;
        animation-timing-function: ease-in;
      }

      80% {
        -webkit-transform: perspective(400px) scale3d(.95, .95, .95);
        transform: perspective(400px) scale3d(.95, .95, .95);
        -webkit-animation-timing-function: ease-in;
        animation-timing-function: ease-in;
      }

      to {
        -webkit-transform: perspective(400px);
        transform: perspective(400px);
        -webkit-animation-timing-function: ease-in;
        animation-timing-function: ease-in;
      }
    }
}
@mixin flipInX($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: flipInX $duration $timing-function $delay infinite;
        animation: flipInX $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: flipInX $duration $timing-function $delay;
        animation: flipInX $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  flipInX {
      from {
        -webkit-transform: perspective(400px) rotate3d(1, 0, 0, 90deg);
        transform: perspective(400px) rotate3d(1, 0, 0, 90deg);
        -webkit-animation-timing-function: ease-in;
        animation-timing-function: ease-in;
        opacity: 0;
      }

      40% {
        -webkit-transform: perspective(400px) rotate3d(1, 0, 0, -20deg);
        transform: perspective(400px) rotate3d(1, 0, 0, -20deg);
        -webkit-animation-timing-function: ease-in;
        animation-timing-function: ease-in;
      }

      60% {
        -webkit-transform: perspective(400px) rotate3d(1, 0, 0, 10deg);
        transform: perspective(400px) rotate3d(1, 0, 0, 10deg);
        opacity: 1;
      }

      80% {
        -webkit-transform: perspective(400px) rotate3d(1, 0, 0, -5deg);
        transform: perspective(400px) rotate3d(1, 0, 0, -5deg);
      }

      to {
        -webkit-transform: perspective(400px);
        transform: perspective(400px);
      }
    }

    @keyframes flipInX {
      from {
        -webkit-transform: perspective(400px) rotate3d(1, 0, 0, 90deg);
        transform: perspective(400px) rotate3d(1, 0, 0, 90deg);
        -webkit-animation-timing-function: ease-in;
        animation-timing-function: ease-in;
        opacity: 0;
      }

      40% {
        -webkit-transform: perspective(400px) rotate3d(1, 0, 0, -20deg);
        transform: perspective(400px) rotate3d(1, 0, 0, -20deg);
        -webkit-animation-timing-function: ease-in;
        animation-timing-function: ease-in;
      }

      60% {
        -webkit-transform: perspective(400px) rotate3d(1, 0, 0, 10deg);
        transform: perspective(400px) rotate3d(1, 0, 0, 10deg);
        opacity: 1;
      }

      80% {
        -webkit-transform: perspective(400px) rotate3d(1, 0, 0, -5deg);
        transform: perspective(400px) rotate3d(1, 0, 0, -5deg);
      }

      to {
        -webkit-transform: perspective(400px);
        transform: perspective(400px);
      }
    }
}
@mixin perspective($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: perspective $duration $timing-function $delay infinite;
        animation: perspective $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: perspective $duration $timing-function $delay;
        animation: perspective $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  flipInY {
      from {
        -webkit-transform: perspective(400px) rotate3d(0, 1, 0, 90deg);
        transform: perspective(400px) rotate3d(0, 1, 0, 90deg);
        -webkit-animation-timing-function: ease-in;
        animation-timing-function: ease-in;
        opacity: 0;
      }

      40% {
        -webkit-transform: perspective(400px) rotate3d(0, 1, 0, -20deg);
        transform: perspective(400px) rotate3d(0, 1, 0, -20deg);
        -webkit-animation-timing-function: ease-in;
        animation-timing-function: ease-in;
      }

      60% {
        -webkit-transform: perspective(400px) rotate3d(0, 1, 0, 10deg);
        transform: perspective(400px) rotate3d(0, 1, 0, 10deg);
        opacity: 1;
      }

      80% {
        -webkit-transform: perspective(400px) rotate3d(0, 1, 0, -5deg);
        transform: perspective(400px) rotate3d(0, 1, 0, -5deg);
      }

      to {
        -webkit-transform: perspective(400px);
        transform: perspective(400px);
      }
    }

    @keyframes flipInY {
      from {
        -webkit-transform: perspective(400px) rotate3d(0, 1, 0, 90deg);
        transform: perspective(400px) rotate3d(0, 1, 0, 90deg);
        -webkit-animation-timing-function: ease-in;
        animation-timing-function: ease-in;
        opacity: 0;
      }

      40% {
        -webkit-transform: perspective(400px) rotate3d(0, 1, 0, -20deg);
        transform: perspective(400px) rotate3d(0, 1, 0, -20deg);
        -webkit-animation-timing-function: ease-in;
        animation-timing-function: ease-in;
      }

      60% {
        -webkit-transform: perspective(400px) rotate3d(0, 1, 0, 10deg);
        transform: perspective(400px) rotate3d(0, 1, 0, 10deg);
        opacity: 1;
      }

      80% {
        -webkit-transform: perspective(400px) rotate3d(0, 1, 0, -5deg);
        transform: perspective(400px) rotate3d(0, 1, 0, -5deg);
      }

      to {
        -webkit-transform: perspective(400px);
        transform: perspective(400px);
      }
    }
    -webkit-backface-visibility: visible !important;
    backface-visibility: visible !important;
}
@mixin flipOutX($duration:.75s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: flipOutX $duration $timing-function $delay infinite;
        animation: flipOutX $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: flipOutX $duration $timing-function $delay;
        animation: flipOutX $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  flipOutX {
      from {
        -webkit-transform: perspective(400px);
        transform: perspective(400px);
      }

      30% {
        -webkit-transform: perspective(400px) rotate3d(1, 0, 0, -20deg);
        transform: perspective(400px) rotate3d(1, 0, 0, -20deg);
        opacity: 1;
      }

      to {
        -webkit-transform: perspective(400px) rotate3d(1, 0, 0, 90deg);
        transform: perspective(400px) rotate3d(1, 0, 0, 90deg);
        opacity: 0;
      }
    }

    @keyframes flipOutX {
      from {
        -webkit-transform: perspective(400px);
        transform: perspective(400px);
      }

      30% {
        -webkit-transform: perspective(400px) rotate3d(1, 0, 0, -20deg);
        transform: perspective(400px) rotate3d(1, 0, 0, -20deg);
        opacity: 1;
      }

      to {
        -webkit-transform: perspective(400px) rotate3d(1, 0, 0, 90deg);
        transform: perspective(400px) rotate3d(1, 0, 0, 90deg);
        opacity: 0;
      }
    }
    -webkit-backface-visibility: visible !important;
    backface-visibility: visible !important;
}
@mixin flipOutY($duration:.75s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: flipOutY $duration $timing-function $delay infinite;
        animation: flipOutY $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: flipOutY $duration $timing-function $delay;
        animation: flipOutY $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  flipOutY {
      from {
        -webkit-transform: perspective(400px);
        transform: perspective(400px);
      }

      30% {
        -webkit-transform: perspective(400px) rotate3d(0, 1, 0, -15deg);
        transform: perspective(400px) rotate3d(0, 1, 0, -15deg);
        opacity: 1;
      }

      to {
        -webkit-transform: perspective(400px) rotate3d(0, 1, 0, 90deg);
        transform: perspective(400px) rotate3d(0, 1, 0, 90deg);
        opacity: 0;
      }
    }

    @keyframes flipOutY {
      from {
        -webkit-transform: perspective(400px);
        transform: perspective(400px);
      }

      30% {
        -webkit-transform: perspective(400px) rotate3d(0, 1, 0, -15deg);
        transform: perspective(400px) rotate3d(0, 1, 0, -15deg);
        opacity: 1;
      }

      to {
        -webkit-transform: perspective(400px) rotate3d(0, 1, 0, 90deg);
        transform: perspective(400px) rotate3d(0, 1, 0, 90deg);
        opacity: 0;
      }
    }
    -webkit-backface-visibility: visible !important;
    backface-visibility: visible !important;
}
@mixin lightSpeedIn($duration:1s,$timing-function:ease-out,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: lightSpeedIn $duration $timing-function $delay infinite;
        animation: lightSpeedIn $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: lightSpeedIn $duration $timing-function $delay;
        animation: lightSpeedIn $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  lightSpeedIn {
      from {
        -webkit-transform: translate3d(100%, 0, 0) skewX(-30deg);
        transform: translate3d(100%, 0, 0) skewX(-30deg);
        opacity: 0;
      }

      60% {
        -webkit-transform: skewX(20deg);
        transform: skewX(20deg);
        opacity: 1;
      }

      80% {
        -webkit-transform: skewX(-5deg);
        transform: skewX(-5deg);
        opacity: 1;
      }

      to {
        -webkit-transform: none;
        transform: none;
        opacity: 1;
      }
    }

    @keyframes lightSpeedIn {
      from {
        -webkit-transform: translate3d(100%, 0, 0) skewX(-30deg);
        transform: translate3d(100%, 0, 0) skewX(-30deg);
        opacity: 0;
      }

      60% {
        -webkit-transform: skewX(20deg);
        transform: skewX(20deg);
        opacity: 1;
      }

      80% {
        -webkit-transform: skewX(-5deg);
        transform: skewX(-5deg);
        opacity: 1;
      }

      to {
        -webkit-transform: none;
        transform: none;
        opacity: 1;
      }
    }
}
@mixin Mame($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: Mame $duration $timing-function $delay infinite;
        animation: Mame $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: Mame $duration $timing-function $delay;
        animation: Mame $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  lightSpeedOut {
  from {
    opacity: 1;
  }

  to {
    -webkit-transform: translate3d(100%, 0, 0) skewX(30deg);
    transform: translate3d(100%, 0, 0) skewX(30deg);
    opacity: 0;
  }
}

@keyframes lightSpeedOut {
  from {
    opacity: 1;
  }

  to {
    -webkit-transform: translate3d(100%, 0, 0) skewX(30deg);
    transform: translate3d(100%, 0, 0) skewX(30deg);
    opacity: 0;
  }
}

.lightSpeedOut {
  -webkit-animation-name: lightSpeedOut;
  animation-name: lightSpeedOut;
  -webkit-animation-timing-function: ease-in;
  animation-timing-function: ease-in;
}

}
@mixin rotateIn($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: rotateIn $duration $timing-function $delay infinite;
        animation: rotateIn $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: rotateIn $duration $timing-function $delay;
        animation: rotateIn $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  rotateIn {
      from {
        -webkit-transform-origin: center;
        transform-origin: center;
        -webkit-transform: rotate3d(0, 0, 1, -200deg);
        transform: rotate3d(0, 0, 1, -200deg);
        opacity: 0;
      }

      to {
        -webkit-transform-origin: center;
        transform-origin: center;
        -webkit-transform: none;
        transform: none;
        opacity: 1;
      }
    }

    @keyframes rotateIn {
      from {
        -webkit-transform-origin: center;
        transform-origin: center;
        -webkit-transform: rotate3d(0, 0, 1, -200deg);
        transform: rotate3d(0, 0, 1, -200deg);
        opacity: 0;
      }

      to {
        -webkit-transform-origin: center;
        transform-origin: center;
        -webkit-transform: none;
        transform: none;
        opacity: 1;
      }
    }
}
@mixin rotateInDownLeft($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: rotateInDownLeft $duration $timing-function $delay infinite;
        animation: rotateInDownLeft $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: rotateInDownLeft $duration $timing-function $delay;
        animation: rotateInDownLeft $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  rotateInDownLeft {
      from {
        -webkit-transform-origin: left bottom;
        transform-origin: left bottom;
        -webkit-transform: rotate3d(0, 0, 1, -45deg);
        transform: rotate3d(0, 0, 1, -45deg);
        opacity: 0;
      }

      to {
        -webkit-transform-origin: left bottom;
        transform-origin: left bottom;
        -webkit-transform: none;
        transform: none;
        opacity: 1;
      }
    }

    @keyframes rotateInDownLeft {
      from {
        -webkit-transform-origin: left bottom;
        transform-origin: left bottom;
        -webkit-transform: rotate3d(0, 0, 1, -45deg);
        transform: rotate3d(0, 0, 1, -45deg);
        opacity: 0;
      }

      to {
        -webkit-transform-origin: left bottom;
        transform-origin: left bottom;
        -webkit-transform: none;
        transform: none;
        opacity: 1;
      }
    }
}
@mixin rotateInDownRight($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: rotateInDownRight $duration $timing-function $delay infinite;
        animation: rotateInDownRight $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: rotateInDownRight $duration $timing-function $delay;
        animation: rotateInDownRight $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  rotateInDownRight {
      from {
        -webkit-transform-origin: right bottom;
        transform-origin: right bottom;
        -webkit-transform: rotate3d(0, 0, 1, 45deg);
        transform: rotate3d(0, 0, 1, 45deg);
        opacity: 0;
      }

      to {
        -webkit-transform-origin: right bottom;
        transform-origin: right bottom;
        -webkit-transform: none;
        transform: none;
        opacity: 1;
      }
    }

    @keyframes rotateInDownRight {
      from {
        -webkit-transform-origin: right bottom;
        transform-origin: right bottom;
        -webkit-transform: rotate3d(0, 0, 1, 45deg);
        transform: rotate3d(0, 0, 1, 45deg);
        opacity: 0;
      }

      to {
        -webkit-transform-origin: right bottom;
        transform-origin: right bottom;
        -webkit-transform: none;
        transform: none;
        opacity: 1;
      }
    }
}
@mixin rotateInUpLeft($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: rotateInUpLeft $duration $timing-function $delay infinite;
        animation: rotateInUpLeft $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: rotateInUpLeft $duration $timing-function $delay;
        animation: rotateInUpLeft $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  rotateInUpLeft {
      from {
        -webkit-transform-origin: left bottom;
        transform-origin: left bottom;
        -webkit-transform: rotate3d(0, 0, 1, 45deg);
        transform: rotate3d(0, 0, 1, 45deg);
        opacity: 0;
      }

      to {
        -webkit-transform-origin: left bottom;
        transform-origin: left bottom;
        -webkit-transform: none;
        transform: none;
        opacity: 1;
      }
    }

    @keyframes rotateInUpLeft {
      from {
        -webkit-transform-origin: left bottom;
        transform-origin: left bottom;
        -webkit-transform: rotate3d(0, 0, 1, 45deg);
        transform: rotate3d(0, 0, 1, 45deg);
        opacity: 0;
      }

      to {
        -webkit-transform-origin: left bottom;
        transform-origin: left bottom;
        -webkit-transform: none;
        transform: none;
        opacity: 1;
      }
    }
}
@mixin rotateInUpRight($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: rotateInUpRight $duration $timing-function $delay infinite;
        animation: rotateInUpRight $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: rotateInUpRight $duration $timing-function $delay;
        animation: rotateInUpRight $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  rotateInUpRight {
      from {
        -webkit-transform-origin: right bottom;
        transform-origin: right bottom;
        -webkit-transform: rotate3d(0, 0, 1, -90deg);
        transform: rotate3d(0, 0, 1, -90deg);
        opacity: 0;
      }

      to {
        -webkit-transform-origin: right bottom;
        transform-origin: right bottom;
        -webkit-transform: none;
        transform: none;
        opacity: 1;
      }
    }

    @keyframes rotateInUpRight {
      from {
        -webkit-transform-origin: right bottom;
        transform-origin: right bottom;
        -webkit-transform: rotate3d(0, 0, 1, -90deg);
        transform: rotate3d(0, 0, 1, -90deg);
        opacity: 0;
      }

      to {
        -webkit-transform-origin: right bottom;
        transform-origin: right bottom;
        -webkit-transform: none;
        transform: none;
        opacity: 1;
      }
    }
}
@mixin rotateOut($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: rotateOut $duration $timing-function $delay infinite;
        animation: rotateOut $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: rotateOut $duration $timing-function $delay;
        animation: rotateOut $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  rotateOut {
      from {
        -webkit-transform-origin: center;
        transform-origin: center;
        opacity: 1;
      }

      to {
        -webkit-transform-origin: center;
        transform-origin: center;
        -webkit-transform: rotate3d(0, 0, 1, 200deg);
        transform: rotate3d(0, 0, 1, 200deg);
        opacity: 0;
      }
    }

    @keyframes rotateOut {
      from {
        -webkit-transform-origin: center;
        transform-origin: center;
        opacity: 1;
      }

      to {
        -webkit-transform-origin: center;
        transform-origin: center;
        -webkit-transform: rotate3d(0, 0, 1, 200deg);
        transform: rotate3d(0, 0, 1, 200deg);
        opacity: 0;
      }
    }
}
@mixin rotateOutDownLeft($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: rotateOutDownLeft $duration $timing-function $delay infinite;
        animation: rotateOutDownLeft $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: rotateOutDownLeft $duration $timing-function $delay;
        animation: rotateOutDownLeft $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  rotateOutDownLeft {
      from {
        -webkit-transform-origin: left bottom;
        transform-origin: left bottom;
        opacity: 1;
      }

      to {
        -webkit-transform-origin: left bottom;
        transform-origin: left bottom;
        -webkit-transform: rotate3d(0, 0, 1, 45deg);
        transform: rotate3d(0, 0, 1, 45deg);
        opacity: 0;
      }
    }

    @keyframes rotateOutDownLeft {
      from {
        -webkit-transform-origin: left bottom;
        transform-origin: left bottom;
        opacity: 1;
      }

      to {
        -webkit-transform-origin: left bottom;
        transform-origin: left bottom;
        -webkit-transform: rotate3d(0, 0, 1, 45deg);
        transform: rotate3d(0, 0, 1, 45deg);
        opacity: 0;
      }
    }
}
@mixin rotateOutDownRight($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: rotateOutDownRight $duration $timing-function $delay infinite;
        animation: rotateOutDownRight $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: rotateOutDownRight $duration $timing-function $delay;
        animation: rotateOutDownRight $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  rotateOutDownRight {
      from {
        -webkit-transform-origin: right bottom;
        transform-origin: right bottom;
        opacity: 1;
      }

      to {
        -webkit-transform-origin: right bottom;
        transform-origin: right bottom;
        -webkit-transform: rotate3d(0, 0, 1, -45deg);
        transform: rotate3d(0, 0, 1, -45deg);
        opacity: 0;
      }
    }

    @keyframes rotateOutDownRight {
      from {
        -webkit-transform-origin: right bottom;
        transform-origin: right bottom;
        opacity: 1;
      }

      to {
        -webkit-transform-origin: right bottom;
        transform-origin: right bottom;
        -webkit-transform: rotate3d(0, 0, 1, -45deg);
        transform: rotate3d(0, 0, 1, -45deg);
        opacity: 0;
      }
    }
}
@mixin rotateOutUpLeft($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: rotateOutUpLeft $duration $timing-function $delay infinite;
        animation: rotateOutUpLeft $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: rotateOutUpLeft $duration $timing-function $delay;
        animation: rotateOutUpLeft $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  rotateOutUpLeft {
      from {
        -webkit-transform-origin: left bottom;
        transform-origin: left bottom;
        opacity: 1;
      }

      to {
        -webkit-transform-origin: left bottom;
        transform-origin: left bottom;
        -webkit-transform: rotate3d(0, 0, 1, -45deg);
        transform: rotate3d(0, 0, 1, -45deg);
        opacity: 0;
      }
    }

    @keyframes rotateOutUpLeft {
      from {
        -webkit-transform-origin: left bottom;
        transform-origin: left bottom;
        opacity: 1;
      }

      to {
        -webkit-transform-origin: left bottom;
        transform-origin: left bottom;
        -webkit-transform: rotate3d(0, 0, 1, -45deg);
        transform: rotate3d(0, 0, 1, -45deg);
        opacity: 0;
      }
    }
}
@mixin rotateOutUpRight($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: rotateOutUpRight $duration $timing-function $delay infinite;
        animation: rotateOutUpRight $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: rotateOutUpRight $duration $timing-function $delay;
        animation: rotateOutUpRight $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  rotateOutUpRight {
      from {
        -webkit-transform-origin: right bottom;
        transform-origin: right bottom;
        opacity: 1;
      }

      to {
        -webkit-transform-origin: right bottom;
        transform-origin: right bottom;
        -webkit-transform: rotate3d(0, 0, 1, 90deg);
        transform: rotate3d(0, 0, 1, 90deg);
        opacity: 0;
      }
    }

    @keyframes rotateOutUpRight {
      from {
        -webkit-transform-origin: right bottom;
        transform-origin: right bottom;
        opacity: 1;
      }

      to {
        -webkit-transform-origin: right bottom;
        transform-origin: right bottom;
        -webkit-transform: rotate3d(0, 0, 1, 90deg);
        transform: rotate3d(0, 0, 1, 90deg);
        opacity: 0;
      }
    }
}
@mixin hinge($duration:2s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: hinge $duration $timing-function $delay infinite;
        animation: hinge $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: hinge $duration $timing-function $delay;
        animation: hinge $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  hinge {
      0% {
        -webkit-transform-origin: top left;
        transform-origin: top left;
        -webkit-animation-timing-function: ease-in-out;
        animation-timing-function: ease-in-out;
      }

      20%, 60% {
        -webkit-transform: rotate3d(0, 0, 1, 80deg);
        transform: rotate3d(0, 0, 1, 80deg);
        -webkit-transform-origin: top left;
        transform-origin: top left;
        -webkit-animation-timing-function: ease-in-out;
        animation-timing-function: ease-in-out;
      }

      40%, 80% {
        -webkit-transform: rotate3d(0, 0, 1, 60deg);
        transform: rotate3d(0, 0, 1, 60deg);
        -webkit-transform-origin: top left;
        transform-origin: top left;
        -webkit-animation-timing-function: ease-in-out;
        animation-timing-function: ease-in-out;
        opacity: 1;
      }

      to {
        -webkit-transform: translate3d(0, 700px, 0);
        transform: translate3d(0, 700px, 0);
        opacity: 0;
      }
    }

    @keyframes hinge {
      0% {
        -webkit-transform-origin: top left;
        transform-origin: top left;
        -webkit-animation-timing-function: ease-in-out;
        animation-timing-function: ease-in-out;
      }

      20%, 60% {
        -webkit-transform: rotate3d(0, 0, 1, 80deg);
        transform: rotate3d(0, 0, 1, 80deg);
        -webkit-transform-origin: top left;
        transform-origin: top left;
        -webkit-animation-timing-function: ease-in-out;
        animation-timing-function: ease-in-out;
      }

      40%, 80% {
        -webkit-transform: rotate3d(0, 0, 1, 60deg);
        transform: rotate3d(0, 0, 1, 60deg);
        -webkit-transform-origin: top left;
        transform-origin: top left;
        -webkit-animation-timing-function: ease-in-out;
        animation-timing-function: ease-in-out;
        opacity: 1;
      }

      to {
        -webkit-transform: translate3d(0, 700px, 0);
        transform: translate3d(0, 700px, 0);
        opacity: 0;
      }
    }
}
@mixin rollIn($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: rollIn $duration $timing-function $delay infinite;
        animation: rollIn $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: rollIn $duration $timing-function $delay;
        animation: rollIn $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  rollIn {
      from {
        opacity: 0;
        -webkit-transform: translate3d(-100%, 0, 0) rotate3d(0, 0, 1, -120deg);
        transform: translate3d(-100%, 0, 0) rotate3d(0, 0, 1, -120deg);
      }

      to {
        opacity: 1;
        -webkit-transform: none;
        transform: none;
      }
    }

    @keyframes rollIn {
      from {
        opacity: 0;
        -webkit-transform: translate3d(-100%, 0, 0) rotate3d(0, 0, 1, -120deg);
        transform: translate3d(-100%, 0, 0) rotate3d(0, 0, 1, -120deg);
      }

      to {
        opacity: 1;
        -webkit-transform: none;
        transform: none;
      }
    }
}
@mixin rollOut($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: rollOut $duration $timing-function $delay infinite;
        animation: rollOut $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: rollOut $duration $timing-function $delay;
        animation: rollOut $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  rollOut {
      from {
        opacity: 1;
      }

      to {
        opacity: 0;
        -webkit-transform: translate3d(100%, 0, 0) rotate3d(0, 0, 1, 120deg);
        transform: translate3d(100%, 0, 0) rotate3d(0, 0, 1, 120deg);
      }
    }

    @keyframes rollOut {
      from {
        opacity: 1;
      }

      to {
        opacity: 0;
        -webkit-transform: translate3d(100%, 0, 0) rotate3d(0, 0, 1, 120deg);
        transform: translate3d(100%, 0, 0) rotate3d(0, 0, 1, 120deg);
      }
    }
}
@mixin zoomIn($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: zoomIn $duration $timing-function $delay infinite;
        animation: zoomIn $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: zoomIn $duration $timing-function $delay;
        animation: zoomIn $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  zoomIn {
      from {
        opacity: 0;
        -webkit-transform: scale3d(.3, .3, .3);
        transform: scale3d(.3, .3, .3);
      }

      50% {
        opacity: 1;
      }
    }

    @keyframes zoomIn {
      from {
        opacity: 0;
        -webkit-transform: scale3d(.3, .3, .3);
        transform: scale3d(.3, .3, .3);
      }

      50% {
        opacity: 1;
      }
    }
}
@mixin zoomInDown($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: zoomInDown $duration $timing-function $delay infinite;
        animation: zoomInDown $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: zoomInDown $duration $timing-function $delay;
        animation: zoomInDown $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  zoomInDown {
      from {
        opacity: 0;
        -webkit-transform: scale3d(.1, .1, .1) translate3d(0, -1000px, 0);
        transform: scale3d(.1, .1, .1) translate3d(0, -1000px, 0);
        -webkit-animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);
        animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);
      }

      60% {
        opacity: 1;
        -webkit-transform: scale3d(.475, .475, .475) translate3d(0, 60px, 0);
        transform: scale3d(.475, .475, .475) translate3d(0, 60px, 0);
        -webkit-animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);
        animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);
      }
    }

    @keyframes zoomInDown {
      from {
        opacity: 0;
        -webkit-transform: scale3d(.1, .1, .1) translate3d(0, -1000px, 0);
        transform: scale3d(.1, .1, .1) translate3d(0, -1000px, 0);
        -webkit-animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);
        animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);
      }

      60% {
        opacity: 1;
        -webkit-transform: scale3d(.475, .475, .475) translate3d(0, 60px, 0);
        transform: scale3d(.475, .475, .475) translate3d(0, 60px, 0);
        -webkit-animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);
        animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);
      }
    }
}
@mixin zoomInLeft($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: zoomInLeft $duration $timing-function $delay infinite;
        animation: zoomInLeft $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: zoomInLeft $duration $timing-function $delay;
        animation: zoomInLeft $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  zoomInLeft {
      from {
        opacity: 0;
        -webkit-transform: scale3d(.1, .1, .1) translate3d(-1000px, 0, 0);
        transform: scale3d(.1, .1, .1) translate3d(-1000px, 0, 0);
        -webkit-animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);
        animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);
      }

      60% {
        opacity: 1;
        -webkit-transform: scale3d(.475, .475, .475) translate3d(10px, 0, 0);
        transform: scale3d(.475, .475, .475) translate3d(10px, 0, 0);
        -webkit-animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);
        animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);
      }
    }

    @keyframes zoomInLeft {
      from {
        opacity: 0;
        -webkit-transform: scale3d(.1, .1, .1) translate3d(-1000px, 0, 0);
        transform: scale3d(.1, .1, .1) translate3d(-1000px, 0, 0);
        -webkit-animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);
        animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);
      }

      60% {
        opacity: 1;
        -webkit-transform: scale3d(.475, .475, .475) translate3d(10px, 0, 0);
        transform: scale3d(.475, .475, .475) translate3d(10px, 0, 0);
        -webkit-animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);
        animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);
      }
    }
}
@mixin zoomInRight($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: zoomInRight $duration $timing-function $delay infinite;
        animation: zoomInRight $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: zoomInRight $duration $timing-function $delay;
        animation: zoomInRight $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  zoomInRight {
      from {
        opacity: 0;
        -webkit-transform: scale3d(.1, .1, .1) translate3d(1000px, 0, 0);
        transform: scale3d(.1, .1, .1) translate3d(1000px, 0, 0);
        -webkit-animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);
        animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);
      }

      60% {
        opacity: 1;
        -webkit-transform: scale3d(.475, .475, .475) translate3d(-10px, 0, 0);
        transform: scale3d(.475, .475, .475) translate3d(-10px, 0, 0);
        -webkit-animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);
        animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);
      }
    }

    @keyframes zoomInRight {
      from {
        opacity: 0;
        -webkit-transform: scale3d(.1, .1, .1) translate3d(1000px, 0, 0);
        transform: scale3d(.1, .1, .1) translate3d(1000px, 0, 0);
        -webkit-animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);
        animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);
      }

      60% {
        opacity: 1;
        -webkit-transform: scale3d(.475, .475, .475) translate3d(-10px, 0, 0);
        transform: scale3d(.475, .475, .475) translate3d(-10px, 0, 0);
        -webkit-animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);
        animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);
      }
    }
}
@mixin zoomInUp($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: zoomInUp $duration $timing-function $delay infinite;
        animation: zoomInUp $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: zoomInUp $duration $timing-function $delay;
        animation: zoomInUp $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  zoomInUp {
      from {
        opacity: 0;
        -webkit-transform: scale3d(.1, .1, .1) translate3d(0, 1000px, 0);
        transform: scale3d(.1, .1, .1) translate3d(0, 1000px, 0);
        -webkit-animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);
        animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);
      }

      60% {
        opacity: 1;
        -webkit-transform: scale3d(.475, .475, .475) translate3d(0, -60px, 0);
        transform: scale3d(.475, .475, .475) translate3d(0, -60px, 0);
        -webkit-animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);
        animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);
      }
    }

    @keyframes zoomInUp {
      from {
        opacity: 0;
        -webkit-transform: scale3d(.1, .1, .1) translate3d(0, 1000px, 0);
        transform: scale3d(.1, .1, .1) translate3d(0, 1000px, 0);
        -webkit-animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);
        animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);
      }

      60% {
        opacity: 1;
        -webkit-transform: scale3d(.475, .475, .475) translate3d(0, -60px, 0);
        transform: scale3d(.475, .475, .475) translate3d(0, -60px, 0);
        -webkit-animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);
        animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);
      }
    }
}
@mixin zoomOut($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: zoomOut $duration $timing-function $delay infinite;
        animation: zoomOut $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: zoomOut $duration $timing-function $delay;
        animation: zoomOut $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  zoomOut {
      from {
        opacity: 1;
      }

      50% {
        opacity: 0;
        -webkit-transform: scale3d(.3, .3, .3);
        transform: scale3d(.3, .3, .3);
      }

      to {
        opacity: 0;
      }
    }

    @keyframes zoomOut {
      from {
        opacity: 1;
      }

      50% {
        opacity: 0;
        -webkit-transform: scale3d(.3, .3, .3);
        transform: scale3d(.3, .3, .3);
      }

      to {
        opacity: 0;
      }
    }
}
@mixin zoomOutDown($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: zoomOutDown $duration $timing-function $delay infinite;
        animation: zoomOutDown $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: zoomOutDown $duration $timing-function $delay;
        animation: zoomOutDown $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  zoomOutDown {
      40% {
        opacity: 1;
        -webkit-transform: scale3d(.475, .475, .475) translate3d(0, -60px, 0);
        transform: scale3d(.475, .475, .475) translate3d(0, -60px, 0);
        -webkit-animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);
        animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);
      }

      to {
        opacity: 0;
        -webkit-transform: scale3d(.1, .1, .1) translate3d(0, 2000px, 0);
        transform: scale3d(.1, .1, .1) translate3d(0, 2000px, 0);
        -webkit-transform-origin: center bottom;
        transform-origin: center bottom;
        -webkit-animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);
        animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);
      }
    }

    @keyframes zoomOutDown {
      40% {
        opacity: 1;
        -webkit-transform: scale3d(.475, .475, .475) translate3d(0, -60px, 0);
        transform: scale3d(.475, .475, .475) translate3d(0, -60px, 0);
        -webkit-animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);
        animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);
      }

      to {
        opacity: 0;
        -webkit-transform: scale3d(.1, .1, .1) translate3d(0, 2000px, 0);
        transform: scale3d(.1, .1, .1) translate3d(0, 2000px, 0);
        -webkit-transform-origin: center bottom;
        transform-origin: center bottom;
        -webkit-animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);
        animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);
      }
    }
}
@mixin zoomOutLeft($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: zoomOutLeft $duration $timing-function $delay infinite;
        animation: zoomOutLeft $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: zoomOutLeft $duration $timing-function $delay;
        animation: zoomOutLeft $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  zoomOutLeft {
      40% {
        opacity: 1;
        -webkit-transform: scale3d(.475, .475, .475) translate3d(42px, 0, 0);
        transform: scale3d(.475, .475, .475) translate3d(42px, 0, 0);
      }

      to {
        opacity: 0;
        -webkit-transform: scale(.1) translate3d(-2000px, 0, 0);
        transform: scale(.1) translate3d(-2000px, 0, 0);
        -webkit-transform-origin: left center;
        transform-origin: left center;
      }
    }

    @keyframes zoomOutLeft {
      40% {
        opacity: 1;
        -webkit-transform: scale3d(.475, .475, .475) translate3d(42px, 0, 0);
        transform: scale3d(.475, .475, .475) translate3d(42px, 0, 0);
      }

      to {
        opacity: 0;
        -webkit-transform: scale(.1) translate3d(-2000px, 0, 0);
        transform: scale(.1) translate3d(-2000px, 0, 0);
        -webkit-transform-origin: left center;
        transform-origin: left center;
      }
    }
}
@mixin zoomOutRight($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: zoomOutRight $duration $timing-function $delay infinite;
        animation: zoomOutRight $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: zoomOutRight $duration $timing-function $delay;
        animation: zoomOutRight $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  zoomOutRight {
      40% {
        opacity: 1;
        -webkit-transform: scale3d(.475, .475, .475) translate3d(-42px, 0, 0);
        transform: scale3d(.475, .475, .475) translate3d(-42px, 0, 0);
      }

      to {
        opacity: 0;
        -webkit-transform: scale(.1) translate3d(2000px, 0, 0);
        transform: scale(.1) translate3d(2000px, 0, 0);
        -webkit-transform-origin: right center;
        transform-origin: right center;
      }
    }

    @keyframes zoomOutRight {
      40% {
        opacity: 1;
        -webkit-transform: scale3d(.475, .475, .475) translate3d(-42px, 0, 0);
        transform: scale3d(.475, .475, .475) translate3d(-42px, 0, 0);
      }

      to {
        opacity: 0;
        -webkit-transform: scale(.1) translate3d(2000px, 0, 0);
        transform: scale(.1) translate3d(2000px, 0, 0);
        -webkit-transform-origin: right center;
        transform-origin: right center;
      }
    }
}
@mixin zoomOutUp($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: zoomOutUp $duration $timing-function $delay infinite;
        animation: zoomOutUp $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: zoomOutUp $duration $timing-function $delay;
        animation: zoomOutUp $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  zoomOutUp {
      40% {
        opacity: 1;
        -webkit-transform: scale3d(.475, .475, .475) translate3d(0, 60px, 0);
        transform: scale3d(.475, .475, .475) translate3d(0, 60px, 0);
        -webkit-animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);
        animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);
      }

      to {
        opacity: 0;
        -webkit-transform: scale3d(.1, .1, .1) translate3d(0, -2000px, 0);
        transform: scale3d(.1, .1, .1) translate3d(0, -2000px, 0);
        -webkit-transform-origin: center bottom;
        transform-origin: center bottom;
        -webkit-animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);
        animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);
      }
    }

    @keyframes zoomOutUp {
      40% {
        opacity: 1;
        -webkit-transform: scale3d(.475, .475, .475) translate3d(0, 60px, 0);
        transform: scale3d(.475, .475, .475) translate3d(0, 60px, 0);
        -webkit-animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);
        animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);
      }

      to {
        opacity: 0;
        -webkit-transform: scale3d(.1, .1, .1) translate3d(0, -2000px, 0);
        transform: scale3d(.1, .1, .1) translate3d(0, -2000px, 0);
        -webkit-transform-origin: center bottom;
        transform-origin: center bottom;
        -webkit-animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);
        animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);
      }
    }
}
@mixin slideInDown($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: slideInDown $duration $timing-function $delay infinite;
        animation: slideInDown $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: slideInDown $duration $timing-function $delay;
        animation: slideInDown $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  slideInDown {
      from {
        -webkit-transform: translate3d(0, -100%, 0);
        transform: translate3d(0, -100%, 0);
        visibility: visible;
      }

      to {
        -webkit-transform: translate3d(0, 0, 0);
        transform: translate3d(0, 0, 0);
      }
    }

    @keyframes slideInDown {
      from {
        -webkit-transform: translate3d(0, -100%, 0);
        transform: translate3d(0, -100%, 0);
        visibility: visible;
      }

      to {
        -webkit-transform: translate3d(0, 0, 0);
        transform: translate3d(0, 0, 0);
      }
    }
}
@mixin slideInLeft($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: slideInLeft $duration $timing-function $delay infinite;
        animation: slideInLeft $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: slideInLeft $duration $timing-function $delay;
        animation: slideInLeft $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  slideInLeft {
      from {
        -webkit-transform: translate3d(-100%, 0, 0);
        transform: translate3d(-100%, 0, 0);
        visibility: visible;
      }

      to {
        -webkit-transform: translate3d(0, 0, 0);
        transform: translate3d(0, 0, 0);
      }
    }

    @keyframes slideInLeft {
      from {
        -webkit-transform: translate3d(-100%, 0, 0);
        transform: translate3d(-100%, 0, 0);
        visibility: visible;
      }

      to {
        -webkit-transform: translate3d(0, 0, 0);
        transform: translate3d(0, 0, 0);
      }
    }
}
@mixin slideInRight($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: slideInRight $duration $timing-function $delay infinite;
        animation: slideInRight $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: slideInRight $duration $timing-function $delay;
        animation: slideInRight $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  slideInRight {
      from {
        -webkit-transform: translate3d(100%, 0, 0);
        transform: translate3d(100%, 0, 0);
        visibility: visible;
      }

      to {
        -webkit-transform: translate3d(0, 0, 0);
        transform: translate3d(0, 0, 0);
      }
    }

    @keyframes slideInRight {
      from {
        -webkit-transform: translate3d(100%, 0, 0);
        transform: translate3d(100%, 0, 0);
        visibility: visible;
      }

      to {
        -webkit-transform: translate3d(0, 0, 0);
        transform: translate3d(0, 0, 0);
      }
    }
}
@mixin slideInUp($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: slideInUp $duration $timing-function $delay infinite;
        animation: slideInUp $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: slideInUp $duration $timing-function $delay;
        animation: slideInUp $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  slideInUp {
      from {
        -webkit-transform: translate3d(0, 100%, 0);
        transform: translate3d(0, 100%, 0);
        visibility: visible;
      }

      to {
        -webkit-transform: translate3d(0, 0, 0);
        transform: translate3d(0, 0, 0);
      }
    }

    @keyframes slideInUp {
      from {
        -webkit-transform: translate3d(0, 100%, 0);
        transform: translate3d(0, 100%, 0);
        visibility: visible;
      }

      to {
        -webkit-transform: translate3d(0, 0, 0);
        transform: translate3d(0, 0, 0);
      }
    }
}
@mixin slideOutDown($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: slideOutDown $duration $timing-function $delay infinite;
        animation: slideOutDown $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: slideOutDown $duration $timing-function $delay;
        animation: slideOutDown $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  slideOutDown {
      from {
        -webkit-transform: translate3d(0, 0, 0);
        transform: translate3d(0, 0, 0);
      }

      to {
        visibility: hidden;
        -webkit-transform: translate3d(0, 100%, 0);
        transform: translate3d(0, 100%, 0);
      }
    }

    @keyframes slideOutDown {
      from {
        -webkit-transform: translate3d(0, 0, 0);
        transform: translate3d(0, 0, 0);
      }

      to {
        visibility: hidden;
        -webkit-transform: translate3d(0, 100%, 0);
        transform: translate3d(0, 100%, 0);
      }
    }
}
@mixin slideOutLeft($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: slideOutLeft $duration $timing-function $delay infinite;
        animation: slideOutLeft $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: slideOutLeft $duration $timing-function $delay;
        animation: slideOutLeft $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  slideOutLeft {
      from {
        -webkit-transform: translate3d(0, 0, 0);
        transform: translate3d(0, 0, 0);
      }

      to {
        visibility: hidden;
        -webkit-transform: translate3d(-100%, 0, 0);
        transform: translate3d(-100%, 0, 0);
      }
    }

    @keyframes slideOutLeft {
      from {
        -webkit-transform: translate3d(0, 0, 0);
        transform: translate3d(0, 0, 0);
      }

      to {
        visibility: hidden;
        -webkit-transform: translate3d(-100%, 0, 0);
        transform: translate3d(-100%, 0, 0);
      }
    }
}
@mixin slideOutRight($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: slideOutRight $duration $timing-function $delay infinite;
        animation: slideOutRight $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: slideOutRight $duration $timing-function $delay;
        animation: slideOutRight $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  slideOutRight {
      from {
        -webkit-transform: translate3d(0, 0, 0);
        transform: translate3d(0, 0, 0);
      }

      to {
        visibility: hidden;
        -webkit-transform: translate3d(100%, 0, 0);
        transform: translate3d(100%, 0, 0);
      }
    }

    @keyframes slideOutRight {
      from {
        -webkit-transform: translate3d(0, 0, 0);
        transform: translate3d(0, 0, 0);
      }

      to {
        visibility: hidden;
        -webkit-transform: translate3d(100%, 0, 0);
        transform: translate3d(100%, 0, 0);
      }
    }
}
@mixin slideOutSmallLeft($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: slideOutLeft $duration $timing-function $delay infinite;
        animation: slideOutLeft $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: slideOutLeft $duration $timing-function $delay;
        animation: slideOutLeft $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  slideOutLeft {
      from {
        -webkit-transform: translate3d(0, 0, 0);
        transform: translate3d(0, 0, 0);
      }

      to {
        visibility: hidden;
        -webkit-transform: translate3d(-20%, 0, 0);
        transform: translate3d(-20%, 0, 0);
      }
    }

    @keyframes slideOutLeft {
      from {
        -webkit-transform: translate3d(0, 0, 0);
        transform: translate3d(0, 0, 0);
      }

      to {
        visibility: hidden;
        -webkit-transform: translate3d(-20%, 0, 0);
        transform: translate3d(-20%, 0, 0);
      }
    }
}
@mixin slideOutSmallRight($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: slideOutRight $duration $timing-function $delay infinite;
        animation: slideOutRight $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: slideOutRight $duration $timing-function $delay;
        animation: slideOutRight $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  slideOutRight {
      from {
        -webkit-transform: translate3d(0, 0, 0);
        transform: translate3d(0, 0, 0);
      }

      to {
        visibility: hidden;
        -webkit-transform: translate3d(20%, 0, 0);
        transform: translate3d(20%, 0, 0);
      }
    }

    @keyframes slideOutRight {
      from {
        -webkit-transform: translate3d(0, 0, 0);
        transform: translate3d(0, 0, 0);
      }

      to {
        visibility: hidden;
        -webkit-transform: translate3d(20%, 0, 0);
        transform: translate3d(20%, 0, 0);
      }
    }
}
@mixin slideOutUp($duration:1s,$timing-function:linear,$delay:0s,$infinite:false){
    @if $infinite == true {
        -webkit-animation: slideOutUp $duration $timing-function $delay infinite;
        animation: slideOutUp $duration $timing-function $delay infinite;
    } @else {
        -webkit-animation: slideOutUp $duration $timing-function $delay;
        animation: slideOutUp $duration $timing-function $delay;
    }
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    @-webkit-keyframes  slideOutUp {
      from {
        -webkit-transform: translate3d(0, 0, 0);
        transform: translate3d(0, 0, 0);
      }

      to {
        visibility: hidden;
        -webkit-transform: translate3d(0, -100%, 0);
        transform: translate3d(0, -100%, 0);
      }
    }

    @keyframes slideOutUp {
      from {
        -webkit-transform: translate3d(0, 0, 0);
        transform: translate3d(0, 0, 0);
      }

      to {
        visibility: hidden;
        -webkit-transform: translate3d(0, -100%, 0);
        transform: translate3d(0, -100%, 0);
      }
    }
}
// 以下@mixin暂弃，优先使用postcss处理
// opacity兼容
// @mixin opacity($opacity:0.8) {
//   opacity: $opacity;
//   $opa :$opacity*100;
//   filter: alpha(opacity=$opa);
// }
@mixin transition($property:all,$duration:0.25s,$animation_type:ease-out,$delay:0s) {
  -webkit-transition: $property $duration $animation_type $delay;
  transition: $property $duration $animation_type $delay;
}
// @mixin origin($x:50%,$y:50%) {
//   -webkit-transform-origin:$x $y;
//   transform-origin:$x $y;
// }
// @mixin rotate($rotate) {
//   -webkit-transform: rotate($rotate);
//   transform: rotate($rotate);
// }
// @mixin scale($scaleX,$scaleY) {
//   -webkit-transform: scale($scaleX,$scaleY);
//   transform: scale($scaleX,$scaleY);
// }
@mixin translate($x,$y) {
  -webkit-transform:translate($x,$y);
  transform:translate($x,$y);
}
// @mixin skew($x,$y) {
//   -webkit-translate:skew($x,$y);
//   translate:skew($x,$y);
// }
// CSS三角形生成
@mixin caret($position,$caret-width,$border-width,$direction,$border-color,$background-color){
  position: $position;

  &:before,
  &:after {
    content:"";
    position: absolute;
  }
  @if $direction == top {
    &:before {
      top:0;
      left: 0;
      border-bottom: $caret-width solid $border-color;
      border-left: $caret-width solid transparent;
      border-right: $caret-width solid transparent;
    }
    &:after {
      left: $border-width;
      top: $border-width;
      border-bottom: ($caret-width - $border-width) solid $background-color;
      border-left: ($caret-width - $border-width) solid transparent;
      border-right: ($caret-width - $border-width) solid transparent;
    }
  }
  @else if $direction == right {
    &:before {
      top:0;
      left: 0;
      border-left: $caret-width solid $border-color;
      border-top: $caret-width solid transparent;
      border-bottom: $caret-width solid transparent;
    }
    &:after {
      left: 0;
      top: $border-width;
      border-left: ($caret-width - $border-width) solid $background-color;
      border-top: ($caret-width - $border-width) solid transparent;
      border-bottom: ($caret-width - $border-width) solid transparent;
    }
  }
  @else if $direction == bottom {
    &:before {
      top:0;
      left: 0;
      border-top: $caret-width solid $border-color;
      border-left: $caret-width solid transparent;
      border-right: $caret-width solid transparent;
    }
    &:after {
      left: $border-width;
      top: 0;
      border-top: ($caret-width - $border-width) solid $background-color;
      border-left: ($caret-width - $border-width) solid transparent;
      border-right: ($caret-width - $border-width) solid transparent;
    }
  }
  @else if $direction == left {
    &:before {
      top:0;
      left: 0;
      border-right: $caret-width solid $border-color;
      border-top: $caret-width solid transparent;
      border-bottom: $caret-width solid transparent;
    }
    &:after {
      left: $border-width;
      top: $border-width;
      border-right: ($caret-width - $border-width) solid $background-color;
      border-top: ($caret-width - $border-width) solid transparent;
      border-bottom: ($caret-width - $border-width) solid transparent;
    }
  }
}
// .caret {
//   top: -10px;
//   left: 10px;
//   @include caret(absolute,10px,1px,top,orange,#fff);
// }
// 盒子居中
@mixin posC($width,$height) {
  width:$width;
  height:$height;
  position: absolute;
  left: 50%;
  top: 50%;
  margin-left: -$width/2;
  margin-top: -$height/2;
}
// 文字超出长度显示"..."
@mixin nowrap($width:98%) {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  width: $width;
  display:inline-block;
}
// 盒子内图片上下左右居中
@mixin imgC ($width,$height) {
  display: table-cell;
  text-align: center;
  vertical-align: middle;
  width:$width;
  height:$height;
  img {
    max-width: $width;
    max-height: $height;
  }
}
// 字体大小适配不同dpr
@mixin px2px($name,$px) {
    #{$name} : round($px / 2) * 1px;/*no*/
    [data-dpr="2"] & {
        #{$name} : $px * 1px;/*no*/
    }
    [data-dpr="2.5"] & {
        #{$name} : round($px * 2.5 / 2) * 1px;/*no*/
    }
    [data-dpr="2.75"] & {
        #{$name} : round($px * 2.75 / 2) * 1px;/*no*/
    }
    [data-dpr="3"] & {
        #{$name} : round($px / 2 * 3) * 1px;/*no*/
    }
    [data-dpr="4"] & {
        #{$name} : $px * 2px;/*no*/
    }
}
// 函数：px转换rem，此处font-size基值为75（即设计稿尺寸为750px）
@function px2rem ($px) {
    @if (type-of($px) == "number") {
        @return ($px / 75px) * 1rem;
    }

    @if (type-of($px) == "list") {
        @if (nth($px, 1) == 0 and nth($px, 2) != 0) {
            @return 0 nth($px, 2) / 75px * 1rem;
        } @else if (nth($px, 1) == 0 and nth($px, 2) == 0)  {
            @return 0 0;
        } @else if (nth($px, 1) != 0 and nth($px, 2) == 0) {
            @return nth($px, 1) / 75px * 1rem 0;
        } @else {
            @return nth($px, 1) / 75px *1rem nth($px, 2) / 75px * 1rem;
        }
    }
}
// 雪碧图多屏适配
@mixin sprites ($icons, $name) {
    width: (image-width(sprite-file($icons, $name)));
    height: (image-height(sprite-file($icons, $name)));
    background-image: sprite-url($icons);
    background-position: (sprite-position($icons, $name));
    background-size: (($imgWidth, $imgHeight));
    background-repeat: no-repeat;
}
// 背景图标
//
// 配置图标所在目录
// $icons: sprite-map("icon/*.png");
//
// 或者引用_icons.scss
@import "icons";
@mixin backImg ($icons,$name) {
    width: px2rem(image-width(sprite-file($icons, $name)));
    height: px2rem(image-height(sprite-file($icons, $name)));
    background-image: image-url(sprite-file($icons, $name));
    background-size: 100%;
    background-repeat: no-repeat;
}
// .eg {@include backImg($icons,phone);}

// rgba兼容
// eg: .eg {@include rgba(background-color,0,0,0,.4);}
@mixin rgba($name,$r:0,$g:0,$b:0,$a:.8) {
  $color-rgba : rgba($r,$g,$b,$a);
  $color-rgb : rgb($r,$g,$b);
  $AA :alpha($color-rgba);
  $RR : red($color-rgba);
  $GG : green($color-rgba);
  $BB : blue($color-rgba);
  #{$name}:$color-rgba;
  filter: progid:DXImageTransform.Microsoft.gradient(startcolorstr='#{ie-hex-str($color-rgba)}',endcolorstr='#{ie-hex-str($color-rgba)}');
}
// eg: .eg {@include hexa(border-color,#000,.8);}
@mixin hexa($name,$color:#000,$a:.8) {
  $RR : red($color);
  $GG : green($color);
  $BB : blue($color);
  $color-rgba : rgba($RR,$GG,$BB,$a);
  #{$name}:$color-rgba;
  filter: progid:DXImageTransform.Microsoft.gradient(startcolorstr='#{ie-hex-str($color-rgba)}',endcolorstr='#{ie-hex-str($color-rgba)}');
}
@mixin setTopLine($line_color:#D5D5D6){
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 1px;
  border-top: 1px solid $line_color;
  color: $line_color;
  -webkit-transform-origin: 0 0;
  transform-origin: 0 0;
  -webkit-transform: scaleY(0.5);
  transform: scaleY(0.5);
}
@mixin setLeftLine($line_color:#D5D5D6){
  position: absolute;
  left: 0;
  top: 0;
  width: 1px;
  height: 100%;
  border-left: 1px solid $line_color;
  color: $line_color;
  -webkit-transform-origin: 0 0;
  transform-origin: 0 0;
  -webkit-transform: scaleX(0.5);
  transform: scaleX(0.5);
}
@mixin setBottomLine($line_color:#D5D5D6){
  position: absolute;
  left: 0;
  bottom: 0;
  width: 100%;
  height: 1px;
  border-bottom: 1px solid $line_color;
  color: $line_color;
  -webkit-transform-origin: 0 0;
  transform-origin: 0 0;
  -webkit-transform: scaleY(0.5);
  transform: scaleY(0.5);
}
@mixin setRightLine($line_color:#D5D5D6){
  position: absolute;
  right: 0;
  top: 0;
  width: 1px;
  height: 100%;
  border-right: 1px solid $line_color;
  color: $line_color;
  -webkit-transform-origin: 0 0;
  transform-origin: 0 0;
  -webkit-transform: scaleX(0.5);
  transform: scaleX(0.5);
}
* {
    // 统一盒模型
    box-sizing:border-box;
    // 取消-webkit-内核浏览器点击阴影
    -webkit-tap-highlight-color:rgba(0,0,0,0);
    -webkit-text-size-adjust:none;
    outline:0;
}
input[type=text],input[type=tel],select ,textarea{-webkit-appearance:none;}
// 循环生成若干 margin, padding 通用类名 方面html内调用
//
// @for $i from 1 through 10 {
//   .mt#{$i * 5} {margin-top: $i * 5px;}
// }
//
